graph(%0 : Double(5, 2, 4)) {
<<<<<<< HEAD
  %1 : Long() = prim::Constant[value={1}]()
  %2 : Long() = aten::size(%0, %1)
  %3 : Long() = aten::mul[other={2}](%2)
  %4 : Long() = prim::Constant[value={0}]()
  %5 : Long() = aten::size(%0, %4)
  %6 : Long() = prim::Constant[value={2}]()
  %7 : Dynamic = aten::stack[dim=0](%3, %5, %6)
  %8 : Double(4, 5, 2) = aten::view(%0, %7)
  return (%8);
||||||| merged common ancestors
  %1 : Long() = aten::size[dim=1](%0)
  %2 : Long() = aten::mul[other={2}](%1)
  %3 : Long() = aten::size[dim=0](%0)
  %4 : Long() = prim::Constant[value={2}]()
  %5 : Dynamic = aten::stack[dim=0](%2, %3, %4)
  %6 : Double(4, 5, 2) = aten::view(%0, %5)
  return (%6);
=======
  %1 : int = aten::size[dim=1](%0)
  %2 : Dynamic = prim::NumToTensor(%1)
  %3 : Long() = aten::mul[other={2}](%2)
  %4 : int = prim::TensorToNum(%3)
  %5 : int = aten::size[dim=0](%0)
  %6 : Dynamic = prim::NumToTensor(%5)
  %7 : int = prim::TensorToNum(%6)
  %8 : int = prim::Constant[value=2]()
  %9 : int[] = prim::ListConstruct(%4, %7, %8)
  %10 : Double(4, 5, 2) = aten::view(%0, %9)
  return (%10);
>>>>>>> Switch interpreter to use actual primitive types
}
